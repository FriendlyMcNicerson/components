package com.netsuite.webservices.v2016_2.platform;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2017-02-06T17:32:15.950+02:00
 * Generated source version: 3.1.4
 * 
 */
@WebServiceClient(name = "NetSuiteService", 
                  wsdlLocation = "file:/D:/ws/talend/dev/components/components/components-netsuite/netsuite-client/src/main/resources/wsdl/2016.2/netsuite.wsdl",
                  targetNamespace = "urn:platform_2016_2.webservices.netsuite.com") 
public class NetSuiteService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:platform_2016_2.webservices.netsuite.com", "NetSuiteService");
    public final static QName NetSuitePort = new QName("urn:platform_2016_2.webservices.netsuite.com", "NetSuitePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/ws/talend/dev/components/components/components-netsuite/netsuite-client/src/main/resources/wsdl/2016.2/netsuite.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(NetSuiteService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/D:/ws/talend/dev/components/components/components-netsuite/netsuite-client/src/main/resources/wsdl/2016.2/netsuite.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public NetSuiteService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public NetSuiteService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NetSuiteService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public NetSuiteService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public NetSuiteService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public NetSuiteService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns NetSuitePortType
     */
    @WebEndpoint(name = "NetSuitePort")
    public NetSuitePortType getNetSuitePort() {
        return super.getPort(NetSuitePort, NetSuitePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NetSuitePortType
     */
    @WebEndpoint(name = "NetSuitePort")
    public NetSuitePortType getNetSuitePort(WebServiceFeature... features) {
        return super.getPort(NetSuitePort, NetSuitePortType.class, features);
    }

}
